<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.freese.misc</groupId>
		<artifactId>misc</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>misc-maven-proxy</artifactId>
	<packaging>jar</packaging>

	<name>${project.groupId} - ${project.artifactId}</name>
	<description>Einfache Implementierung eines virtuellen Repositories.</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<dependencies>
					<!-- Nur für Transformer, falls benötigt -->
					<!--dependency>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						</dependency -->
				</dependencies>
				<executions>
					<execution>
						<id>shade uberjar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<!--finalName>${project.artifactId}-jar-with-dependencies</finalName -->
							<shadedClassifierName>shaded</shadedClassifierName>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
							<minimizeJar>false</minimizeJar> <!--Alle Klassen entfernen, die nicht verwendet werden. -->
							<shadedArtifactAttached>true</shadedArtifactAttached> <!--Uber-jar als neue Datei, Original nicht ersetzen. -->
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>**/NOTICE*</exclude>
										<exclude>**/LICENCE*</exclude>
										<exclude>**/LICENSE*</exclude>
										<exclude>**/*_lic.txt</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>de.freese.maven.proxy.MavenProxyApplication</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<!--transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
									</transformer -->
								<!--transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
									</transformer -->
								<!--transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
									<resource>META-INF/spring.factories</resource>
									</transformer -->
								<!--transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
									<transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
									<addHeader>false</addHeader>
									</transformer -->
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- spring-boot:run, clean package spring-boot:repackage für executable
				jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>de.freese.maven.proxy.MavenProxyApplication</mainClass>
					<jvmArguments>
						-Dmavenproxy.directory=/mnt/ssd512GB/maven-proxy
 						-Dmavenproxy.port=7999
						-Xms32m
						-Xmx64m
						-noverify
						-XX:TieredStopAtLevel=1						
						-Djava.security.egd=file:/dev/./urandom
						-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005						
					</jvmArguments>
					<layout>ZIP</layout>
					<classifier>jar-with-dependencies</classifier>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
					<!--execution>
						<id>package</id>
						<phase>package</phase>
						<goals>
						<goal>repackage</goal>
						</goals>
						</execution -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy project dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<skip>true</skip>
							<outputDirectory>${basedir}/app/libs</outputDirectory>
							<failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>
							<useRepositoryLayout>false</useRepositoryLayout>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy project jars</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<outputDirectory>${basedir}/app</outputDirectory>
							<stripVersion>true</stripVersion>
							<artifactItems>
								<!--artifactItem>
									<groupId>de.freese.misc</groupId>
									<artifactId>misc-maven-proxy</artifactId>
									<version>${project.version}</version>
									<overWrite>true</overWrite>
									</artifactItem>
									<artifactItem>
									<groupId>de.freese.misc</groupId>
									<artifactId>misc-maven-proxy</artifactId>
									<version>${project.version}</version>
									<classifier>sources</classifier>
									<overWrite>true</overWrite>
									</artifactItem>
									<artifactItem>
									<groupId>de.freese.misc</groupId>
									<artifactId>misc-maven-proxy</artifactId>
									<version>${project.version}</version>
									<classifier>test-sources</classifier>
									<overWrite>true</overWrite>
									</artifactItem>
									<artifactItem>
									<groupId>de.freese.misc</groupId>
									<artifactId>misc-maven-proxy</artifactId>
									<version>${project.version}</version>
									<classifier>shaded</classifier>
									<overWrite>true</overWrite>
									</artifactItem -->
								<artifactItem>
									<groupId>de.freese.misc</groupId>
									<artifactId>misc-maven-proxy</artifactId>
									<version>${project.version}</version>
									<classifier>jar-with-dependencies</classifier>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- compile scope -->
		<dependency>
			<groupId>com.sun.activation</groupId>
			<artifactId>jakarta.activation</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- runtime scope -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- provided scope -->
		<!-- test scope -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
