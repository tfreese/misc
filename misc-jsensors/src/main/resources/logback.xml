<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="false" scanPeriod="60 seconds">
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />

    <!--Levels are ordered: TRACE < DEBUG < INFO < WARN < ERROR -->
    <!-- ${PID} -->
    <!--property name="pattern" value="%date{yyyy-MM-dd HH:mm:ss.SSS} - %-5level[%thread] - %logger{0}[%method] - %message%n" /-->
    <!--property name="pattern" value="%date{HH:mm:ss.SSS} - %clr(%.-1level){yellow}[%-12thread] - %logger{0} - %message%n" /-->
    <property name="pattern" value="%date{HH:mm:ss.SSS} - %5level - [%20.-20thread] - %replace(%-35.-35logger{0}){' ', '.'} - %message%n" />
    <!--property name="log.dir" value="${user.dir}/log" /-->
    <property name="log.dir" value="${user.home}/.jsensors" />

    <!--if condition='isNull("log.dir")'>
        <then>
            <property name="log.dir" value="${user.home}/logs/jsensors" />
        </then>
        <else>
        </else>
    </if-->

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.out</target>
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${pattern}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>

    <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.err</target>
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${pattern}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>            
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!--appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/jsensors.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/%d{yyyy-MM,aux}/jsensors.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>
            <immediateFlush>true</immediateFlush>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>
    
    <appender name="FILE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE" />
    </appender-->     

    <logger name="de.freese.jsensors.backend" level="DEBUG"/>
    <logger name="de.freese.jsensors.sensor" level="DEBUG"/>
    <logger name="hsqldb.db" level="WARN"/>

    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="STDERR" />
        <!--appender-ref ref="FILE_ASYNC" /--> <!-- sonst kÃ¶nnte nur eine Instanz starten -->
    </root>
</configuration>