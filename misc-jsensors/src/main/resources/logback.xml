<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Configuration [
<!ENTITY level_ROOT "INFO">
<!ENTITY level_APPLICATION "INFO">
]
>
<configuration debug="false" scan="false" scanPeriod="60 seconds">

    <!--Levels are ordered: TRACE < DEBUG < INFO < WARN < ERROR -->
    <!-- %date{yyyy-MM-dd HH:mm:ss.SSS}; [%-7X{USER}]; [%method:%line] -->
    <!--property name="PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} - %-5level[%thread] - %logger{0}[%method] - %message%n" /-->
    <property name="PATTERN" value="%date{HH:mm:ss.SSS} - %5level - [%20.-20thread] - %replace(%-40.-40logger{0}){' ', '.'} - %message%n" />
    
    <!--property name="LOG_DIR" value="${user.home}/.java/jsensors" /-->

    <!-- Conditions brauchen org.codehaus.janino:janino -->
    <!--if condition='isNull("LOG_DIR")'>
        <then>
            <property name="LOG_DIR" value="${user.home}/.java/myAppl" />
        </then>
        <else>
        </else>
    </if-->
    
    <!-- ######################################################################################################################################## -->

    <appender name="CONSOLE_STD" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.out</target>
        <immediateFlush>true</immediateFlush>          
        <encoder>
            <pattern>${PATTERN_CONSOLE:-${PATTERN}}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>  
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>

    <appender name="CONSOLE_ERR" class="ch.qos.logback.core.ConsoleAppender">
        <target>System.err</target>        
        <immediateFlush>true</immediateFlush>  
        <encoder>
            <pattern>${PATTERN_CONSOLE:-${PATTERN}}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>                     
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR:-${user.dir}/logs}/${LOG_FILE_NAME:-application}.log</file>        
        <append>true</append>
        <immediateFlush>false</immediateFlush>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR:-${user.dir}/logs}/%d{yyyy-MM,aux}/${LOG_FILE_NAME:-application}.%d{yyyy-MM-dd}_%i.log.gz</fileNamePattern>
            <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
            <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
            <totalSizeCap>${LOG_FILE_SIZE_CAP:-1GB}</totalSizeCap>
        </rollingPolicy>        
        <encoder>
            <pattern>${PATTERN_FILE:-${PATTERN}}</pattern>
            <outputPatternAsHeader>false</outputPatternAsHeader>            
        </encoder>
    </appender>
    
    <appender name="FILE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE" />
        <discardingThreshold>0</discardingThreshold>
		<queueSize>8</queueSize>
    </appender>
    
    <!-- ######################################################################################################################################## -->     

    <logger name="de.freese.jsensors" level="&level_APPLICATION;"/>
    <logger name="de.freese.jsensors.backend.jdbc" level="DEBUG"/>
    <logger name="hsqldb.db" level="WARN"/>

    <root level="&level_ROOT;">
        <appender-ref ref="CONSOLE_STD" />
        <appender-ref ref="CONSOLE_ERR" />
        <appender-ref ref="FILE_ASYNC" />
    </root>
</configuration>